#!/usr/bin/env node
"use strict";
// Compiles a configuration to a module (single file) that exports the instantiated instance,
// where all dependencies are injected.
Object.defineProperty(exports, "__esModule", { value: true });
const Path = require("path");
const minimist = require("minimist");
const __1 = require("..");
const args = minimist(process.argv.slice(2));
if (args._.length !== 1 || args.h || args.help) {
    process.stderr.write(`compile-config compiles a Components.js config file to a JavaScript module

Usage:
  compile-config http://example.org/myInstance -c config.jsonld

Options:
  -c      Path to a Components.js config file, if not provided, the config must be provided via stdin
  -p      The main module path, if not provided, this defaults to the working directory
  -e      The instance by config URI that will be exported, by default this is the provided instance URI.
  -f      If the exported instance should be exposed as a function, which accepts an optional hash of variables.
  --help  print this help message
`);
    process.exit(1);
}
const configResourceUri = args._[0];
const configPath = args.c;
const mainModulePath = args.p ? Path.resolve(process.cwd(), args.p) : process.cwd();
let exportVariableName;
if (args.e) {
    exportVariableName = args.e;
}
const asFunction = !!args.f;
(0, __1.compileConfig)(mainModulePath, configPath, configResourceUri, exportVariableName, asFunction)
    .then((output) => process.stdout.write(`${output}\n`))
    .catch(error => {
    process.stderr.write(`${error.stack}\n`);
    process.exit(1);
});
//# sourceMappingURL=compile-config.js.map