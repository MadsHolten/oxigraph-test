"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParameterPropertyHandlerDefault = void 0;
const Iris_1 = require("../../rdf/Iris");
const ErrorResourcesContext_1 = require("../../util/ErrorResourcesContext");
/**
 * If no value has been set, its default value will be set.
 */
class ParameterPropertyHandlerDefault {
    constructor(objectLoader) {
        this.objectLoader = objectLoader;
    }
    canHandle(value, configRoot, parameter) {
        return Boolean(!value && parameter.property.default);
    }
    handle(value, configRoot, parameter, configElement) {
        if (parameter.properties.default.length > 1) {
            throw new ErrorResourcesContext_1.ErrorResourcesContext(`Invalid default value for parameter "${parameter.value}": Only one value can be defined, or an RDF list must be provided`, { parameter });
        }
        return parameter.property.default.list ?
            this.objectLoader.createCompactedResource({
                list: parameter.property.default.list.map(subValue => this.handleValue(subValue, configElement)),
            }) :
            this.handleValue(parameter.property.default, configElement);
    }
    handleValue(value, configElement) {
        if (value.type === 'NamedNode' && value.value === Iris_1.IRIS_RDF.subject) {
            value = this.objectLoader.createCompactedResource(`"${configElement.value}"`);
        }
        return value;
    }
}
exports.ParameterPropertyHandlerDefault = ParameterPropertyHandlerDefault;
//# sourceMappingURL=ParameterPropertyHandlerDefault.js.map