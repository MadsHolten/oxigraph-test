"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParameterPropertyHandlerFixed = void 0;
const ErrorResourcesContext_1 = require("../../util/ErrorResourcesContext");
/**
 * Irrespective of any set values, prepend the parameter's fixed values.
 */
class ParameterPropertyHandlerFixed {
    constructor(objectLoader) {
        this.objectLoader = objectLoader;
    }
    canHandle(value, configRoot, parameter) {
        return Boolean(parameter.property.fixed);
    }
    handle(value, configRoot, parameter, configElement) {
        if (parameter.properties.fixed.length > 1) {
            throw new ErrorResourcesContext_1.ErrorResourcesContext(`Invalid fixed value for parameter "${parameter.value}": Only one value can be defined, or an RDF list must be provided`, { parameter });
        }
        if (value) {
            const fixedValues = parameter.property.fixed.list || [parameter.property.fixed];
            if (value.list) {
                value.list.unshift(...fixedValues);
            }
            else {
                value = this.objectLoader.createCompactedResource({
                    list: [
                        ...fixedValues,
                        value,
                    ],
                });
            }
        }
        else {
            value = parameter.property.fixed;
        }
        return value;
    }
}
exports.ParameterPropertyHandlerFixed = ParameterPropertyHandlerFixed;
//# sourceMappingURL=ParameterPropertyHandlerFixed.js.map