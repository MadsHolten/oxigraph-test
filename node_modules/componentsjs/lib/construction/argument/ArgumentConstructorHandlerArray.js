"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArgumentConstructorHandlerArray = void 0;
const ErrorResourcesContext_1 = require("../../util/ErrorResourcesContext");
/**
 * Handles arguments with elements as array.
 */
class ArgumentConstructorHandlerArray {
    canHandle(value, settings, argsCreator) {
        return Boolean(value.property.elements);
    }
    async handle(argument, settings, argsCreator) {
        // Recursively handle all sub-args in the array
        const elements = await Promise.all(argument.properties.elements.map(async (entry) => {
            if (!entry.property.value) {
                throw new ErrorResourcesContext_1.ErrorResourcesContext(`Missing value in array elements entry`, { entry, argument });
            }
            return await argsCreator.getArgumentValue(entry.property.value, settings);
        }));
        return argsCreator.constructionStrategy.createArray({ settings, elements });
    }
}
exports.ArgumentConstructorHandlerArray = ArgumentConstructorHandlerArray;
//# sourceMappingURL=ArgumentConstructorHandlerArray.js.map