"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorResourcesContext = void 0;
const rdf_object_1 = require("rdf-object");
/**
 * An error that can include a context containing resources for display.
 */
class ErrorResourcesContext extends Error {
    constructor(message, context) {
        super(message);
        this.name = 'ErrorResourcesContext';
        this.context = context;
    }
    exportContext() {
        return ErrorResourcesContext.contextToJson(this.context);
    }
    static contextToJson(context) {
        return Object.fromEntries(Object.entries(context)
            .map(([key, value]) => {
            let mapped;
            if (typeof value === 'string') {
                mapped = value;
            }
            else if (Array.isArray(value)) {
                mapped = value.map(valueSub => ErrorResourcesContext.resourceToJson(valueSub));
            }
            else if (value instanceof rdf_object_1.Resource || value === undefined) {
                mapped = ErrorResourcesContext.resourceToJson(value);
            }
            else if ('description' in value) {
                mapped = ErrorResourcesContext.conflictToJson(value);
            }
            else {
                mapped = ErrorResourcesContext.contextToJson(value);
            }
            return [key, mapped];
        }));
    }
    static resourceToJson(resource) {
        if (resource) {
            return resource.toJSON(1);
        }
    }
    static conflictToJson(conflict) {
        const data = { description: conflict.description };
        if (conflict.causes) {
            data.causes = [];
            // Only pick the first 2 conflicts for visualization
            for (const subConflict of conflict.causes.slice(0, 1)) {
                data.causes.push(ErrorResourcesContext.conflictToJson(subConflict));
            }
        }
        else {
            data.context = ErrorResourcesContext.contextToJson(conflict.context);
        }
        return data;
    }
}
exports.ErrorResourcesContext = ErrorResourcesContext;
//# sourceMappingURL=ErrorResourcesContext.js.map