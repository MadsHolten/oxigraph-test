import type { IJsonLdContext } from 'jsonld-context-parser';
import { FetchDocumentLoader } from 'jsonld-context-parser';
import type { Logger } from 'winston';
/**
 * A document loader that first loads from a precomputed set of contexts,
 * and only then does an HTTP(S) lookup for the context.
 */
export declare class PrefetchedDocumentLoader extends FetchDocumentLoader {
    static readonly CONTEXT_URL: string;
    private static readonly DEFAULT_CONTEXT;
    private static readonly DEFAULT_CONTEXTS;
    private readonly contexts;
    private readonly path?;
    private readonly logger?;
    constructor(options: IPrefetchedDocumentLoaderOptions);
    load(url: string): Promise<IJsonLdContext>;
}
export interface IPrefetchedDocumentLoaderOptions {
    contexts: Record<string, any>;
    logger?: Logger;
    path?: string;
}
