"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrefetchedDocumentLoader = void 0;
const fs = require("fs");
const jsonld_context_parser_1 = require("jsonld-context-parser");
/**
 * A document loader that first loads from a precomputed set of contexts,
 * and only then does an HTTP(S) lookup for the context.
 */
class PrefetchedDocumentLoader extends jsonld_context_parser_1.FetchDocumentLoader {
    constructor(options) {
        super();
        this.contexts = Object.assign(Object.assign({}, options.contexts), PrefetchedDocumentLoader.DEFAULT_CONTEXTS);
        this.logger = options.logger;
        this.path = options.path;
    }
    async load(url) {
        // Warn on deprecated context usage
        if (this.logger &&
            (url === 'https://linkedsoftwaredependencies.org/bundles/npm/componentsjs/^4.0.0/components/context.jsonld' ||
                url === 'https://linkedsoftwaredependencies.org/bundles/npm/componentsjs/^3.0.0/components/context.jsonld')) {
            this.logger.warn(`Detected deprecated context URL '${url}'${this.path ? ` in ${this.path}` : ''}. Prefer using version '^5.0.0' instead.`);
        }
        // Load prefetched contexts
        if (url in this.contexts) {
            return this.contexts[url];
        }
        // Warn before doing a remote context lookup
        if (this.logger) {
            this.logger.warn(`Detected remote context lookup for '${url}'${this.path ? ` in ${this.path}` : ''}. This may indicate a missing or invalid dependency, incorrect version number, or an invalid context URL.`);
        }
        return super.load(url);
    }
}
exports.PrefetchedDocumentLoader = PrefetchedDocumentLoader;
PrefetchedDocumentLoader.CONTEXT_URL = 'https://linkedsoftwaredependencies.org/bundles/npm/componentsjs/^5.0.0/components/context.jsonld';
// eslint-disable-next-line no-sync
PrefetchedDocumentLoader.DEFAULT_CONTEXT = JSON.parse(fs
    .readFileSync(`${__dirname}/../../components/context.jsonld`, 'utf8'));
PrefetchedDocumentLoader.DEFAULT_CONTEXTS = {
    [PrefetchedDocumentLoader.CONTEXT_URL]: PrefetchedDocumentLoader.DEFAULT_CONTEXT,
    // TODO: temporarily also set old context versions for backwards-compatible.
    'https://linkedsoftwaredependencies.org/bundles/npm/componentsjs/^4.0.0/components/context.jsonld': PrefetchedDocumentLoader.DEFAULT_CONTEXT,
    'https://linkedsoftwaredependencies.org/bundles/npm/componentsjs/^3.0.0/components/context.jsonld': PrefetchedDocumentLoader.DEFAULT_CONTEXT,
};
//# sourceMappingURL=PrefetchedDocumentLoader.js.map