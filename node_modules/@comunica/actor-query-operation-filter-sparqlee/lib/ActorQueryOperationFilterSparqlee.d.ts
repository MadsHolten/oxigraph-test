import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';
import { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';
import type { IActorTest } from '@comunica/core';
import type { IActionContext, IQueryOperationResult } from '@comunica/types';
import type { Algebra } from 'sparqlalgebrajs';
/**
 * A comunica Filter Sparqlee Query Operation Actor.
 */
export declare class ActorQueryOperationFilterSparqlee extends ActorQueryOperationTypedMediated<Algebra.Filter> {
    constructor(args: IActorQueryOperationTypedMediatedArgs);
    testOperation(operation: Algebra.Filter, context: IActionContext): Promise<IActorTest>;
    runOperation(operation: Algebra.Filter, context: IActionContext): Promise<IQueryOperationResult>;
}
