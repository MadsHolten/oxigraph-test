import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';
import { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';
import type { IActorTest } from '@comunica/core';
import type { IActionContext, IQueryOperationResult } from '@comunica/types';
import type { Algebra } from 'sparqlalgebrajs';
/**
 * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor
 * that handles SPARQL add operations.
 */
export declare class ActorQueryOperationAddRewrite extends ActorQueryOperationTypedMediated<Algebra.Add> {
    private readonly factory;
    constructor(args: IActorQueryOperationTypedMediatedArgs);
    testOperation(operation: Algebra.Add, context: IActionContext): Promise<IActorTest>;
    runOperation(operationOriginal: Algebra.Add, context: IActionContext): Promise<IQueryOperationResult>;
}
