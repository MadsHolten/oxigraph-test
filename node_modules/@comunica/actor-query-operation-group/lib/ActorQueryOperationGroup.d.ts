import type { MediatorHashBindings } from '@comunica/bus-hash-bindings';
import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';
import { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';
import type { IActorTest } from '@comunica/core';
import type { IActionContext, IQueryOperationResult } from '@comunica/types';
import type { Algebra } from 'sparqlalgebrajs';
/**
 * A comunica Group Query Operation Actor.
 */
export declare class ActorQueryOperationGroup extends ActorQueryOperationTypedMediated<Algebra.Group> {
    readonly mediatorHashBindings: MediatorHashBindings;
    constructor(args: IActorQueryOperationGroupArgs);
    testOperation(operation: Algebra.Group, context: IActionContext): Promise<IActorTest>;
    runOperation(operation: Algebra.Group, context: IActionContext): Promise<IQueryOperationResult>;
}
export interface IActorQueryOperationGroupArgs extends IActorQueryOperationTypedMediatedArgs {
    mediatorHashBindings: MediatorHashBindings;
}
