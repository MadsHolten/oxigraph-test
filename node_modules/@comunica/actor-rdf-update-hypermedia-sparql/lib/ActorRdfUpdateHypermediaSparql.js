"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActorRdfUpdateHypermediaSparql = void 0;
const bus_rdf_update_hypermedia_1 = require("@comunica/bus-rdf-update-hypermedia");
const QuadDestinationSparql_1 = require("./QuadDestinationSparql");
/**
 * A comunica SPARQL RDF Update Hypermedia Actor.
 */
class ActorRdfUpdateHypermediaSparql extends bus_rdf_update_hypermedia_1.ActorRdfUpdateHypermedia {
    constructor(args) {
        super(args, 'sparql');
    }
    async testMetadata(action) {
        if (!action.forceDestinationType && !action.metadata.sparqlService &&
            !(this.checkUrlSuffixSparql && action.url.endsWith('/sparql')) &&
            !(this.checkUrlSuffixUpdate && action.url.endsWith('/update'))) {
            throw new Error(`Actor ${this.name} could not detect a SPARQL service description or URL ending on /sparql or /update.`);
        }
        return true;
    }
    async run(action) {
        this.logInfo(action.context, `Identified as sparql destination: ${action.url}`);
        return {
            destination: new QuadDestinationSparql_1.QuadDestinationSparql(action.metadata.sparqlService || action.url, action.context, this.mediatorHttp),
        };
    }
}
exports.ActorRdfUpdateHypermediaSparql = ActorRdfUpdateHypermediaSparql;
//# sourceMappingURL=ActorRdfUpdateHypermediaSparql.js.map