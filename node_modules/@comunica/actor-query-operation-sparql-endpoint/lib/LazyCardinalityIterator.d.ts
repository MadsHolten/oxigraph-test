import { AsyncIterator } from 'asynciterator';
/**
  An iterator that maintains an internal buffer of items.
  This class serves as a base class for other iterators
  with a typically complex item generation process.
  @extends module:asynciterator.AsyncIterator
*/
export declare class LazyCardinalityIterator<T> extends AsyncIterator<T> {
    private readonly _source;
    private _buffer?;
    private _cardinality?;
    private readonly _error;
    private _count;
    private _buffering;
    constructor(_source: AsyncIterator<T>);
    read(): T | null;
    getCardinality(): Promise<number>;
    close(): void;
}
