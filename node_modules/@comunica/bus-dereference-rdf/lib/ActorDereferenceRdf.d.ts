import type { IActionDereferenceParse, IActorDereferenceParseArgs, IActorDereferenceParseOutput } from '@comunica/bus-dereference';
import { ActorDereferenceParse } from '@comunica/bus-dereference';
import type { IActionRdfParseMetadata, IActorRdfParseOutputMetadata } from '@comunica/bus-rdf-parse';
import type { Mediate } from '@comunica/core';
import type * as RDF from '@rdfjs/types';
/**
 * A base actor for dereferencing URLs to quad streams.
 *
 * Actor types:
 * * Input:  IActionDereferenceRdf:      A URL.
 * * Test:   <none>
 * * Output: IActorDereferenceRdfOutput: A quad stream.
 *
 * @see IActionDereferenceRdf
 * @see IActorDereferenceRdfOutput
 */
export declare abstract class ActorDereferenceRdf extends ActorDereferenceParse<RDF.Stream, IActionRdfParseMetadata, IActorRdfParseOutputMetadata> {
    /**
     * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus
     */
    constructor(args: IActorDereferenceRdfArgs);
}
export interface IActorDereferenceRdfArgs extends IActorDereferenceParseArgs<RDF.Stream, IActionRdfParseMetadata, IActorRdfParseOutputMetadata> {
}
export declare type IActionDereferenceRdf = IActionDereferenceParse<IActionRdfParseMetadata>;
export declare type IActorDereferenceRdfOutput = IActorDereferenceParseOutput<RDF.Stream, IActorRdfParseOutputMetadata>;
export declare type MediatorDereferenceRdf = Mediate<IActionDereferenceRdf, IActorDereferenceRdfOutput>;
