import type { IActionSparqlSerialize, IActorQueryResultSerializeFixedMediaTypesArgs, IActorQueryResultSerializeOutput } from '@comunica/bus-query-result-serialize';
import { ActorQueryResultSerializeFixedMediaTypes } from '@comunica/bus-query-result-serialize';
import type { IActionContext } from '@comunica/types';
/**
 * A comunica Simple Sparql Serialize Actor.
 */
export declare class ActorQueryResultSerializeSimple extends ActorQueryResultSerializeFixedMediaTypes {
    /**
     * @param args -
     *   \ @defaultNested {{ "simple": 0.9 }} mediaTypePriorities
     *   \ @defaultNested {{ "simple": "https://comunica.linkeddatafragments.org/#results_simple" }} mediaTypeFormats
     */
    constructor(args: IActorQueryResultSerializeFixedMediaTypesArgs);
    testHandleChecked(action: IActionSparqlSerialize, context: IActionContext): Promise<boolean>;
    runHandle(action: IActionSparqlSerialize, mediaType: string, context: IActionContext): Promise<IActorQueryResultSerializeOutput>;
}
