{"version":3,"file":"Sum.js","sourceRoot":"","sources":["../../../lib/aggregators/Sum.ts"],"names":[],"mappings":";;;AAEA,4CAAgD;AAChD,kDAA+C;AAC/C,oCAAoC;AACpC,qDAAkD;AAIlD,MAAa,GAAI,SAAQ,+BAAwB;IAAjD;;QACmB,WAAM,GAAG,4BAAgB,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IAmBzE,CAAC;IAjBQ,MAAM,CAAC,UAAU;QACtB,OAAO,IAAA,iBAAO,EAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAEM,IAAI,CAAC,KAAe;QACzB,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAEM,GAAG,CAAC,KAAe,EAAE,IAAc;QACxC,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACrD,MAAM,GAAG,GAAsB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAE,KAAK,EAAE,YAAY,CAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9F,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,KAAe;QAC3B,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;CACF;AApBD,kBAoBC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport type * as E from '../expressions';\nimport { regularFunctions } from '../functions';\nimport { integer } from '../functions/Helpers';\nimport * as C from '../util/Consts';\nimport { BaseAggregator } from './BaseAggregator';\n\ntype SumState = E.NumericLiteral;\n\nexport class Sum extends BaseAggregator<SumState> {\n  private readonly summer = regularFunctions[C.RegularOperator.ADDITION];\n\n  public static emptyValue(): RDF.Term {\n    return integer(0).toRDF();\n  }\n\n  public init(start: RDF.Term): SumState {\n    return this.termToNumericOrError(start);\n  }\n\n  public put(state: SumState, term: RDF.Term): SumState {\n    const internalTerm = this.termToNumericOrError(term);\n    const sum = <E.NumericLiteral> this.summer.apply([ state, internalTerm ], this.sharedContext);\n    return sum;\n  }\n\n  public result(state: SumState): RDF.Term {\n    return state.toRDF();\n  }\n}\n"]}