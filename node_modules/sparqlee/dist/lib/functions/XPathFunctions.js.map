{"version":3,"file":"XPathFunctions.js","sourceRoot":"","sources":["../../../lib/functions/XPathFunctions.ts"],"names":[],"mappings":"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","sourcesContent":["// https://www.w3.org/TR/xpath-functions/#func-matches\n// https://www.w3.org/TR/xpath-functions/#flags\nexport function matches(text: string, pattern: string, flags?: string): boolean {\n  // TODO: Only flags 'i' and 'm' match between XPath and JS.\n  // 's', 'x', 'q', would need proper implementation.\n  const reg = new RegExp(pattern, flags);\n  return reg.test(text);\n}\n\n// TODO: Fix flags\n// https://www.w3.org/TR/xpath-functions/#func-replace\nexport function replace(arg: string, pattern: string, replacement: string, flags?: string): string {\n  let reg = new RegExp(pattern, flags);\n  if (!reg.global) {\n    const flags_ = flags || '';\n    reg = new RegExp(pattern, `${flags_}g`);\n  }\n  return arg.replace(reg, replacement);\n}\n\n// TODO: Not an XPath function\n// TODO: Publish as package\n// https://www.ietf.org/rfc/rfc4647.txt\n// https://www.w3.org/TR/sparql11-query/#func-langMatches\nexport function langMatches(tag: string, range: string): boolean {\n  const langTags = tag.split('-');\n  const rangeTags = range.split('-');\n\n  if (!_matchLangTag(rangeTags[0], langTags[0]) &&\n    !_isWildCard(langTags[0])) {\n    return false;\n  }\n\n  let lI = 1;\n  let rI = 1;\n  while (rI < rangeTags.length) {\n    if (_isWildCard(rangeTags[rI])) {\n      rI++;\n      continue;\n    }\n    if (lI === langTags.length) {\n      return false;\n    }\n    if (_matchLangTag(rangeTags[rI], langTags[lI])) {\n      lI++;\n      rI++;\n      continue;\n    }\n    if (langTags[lI].length === 1) {\n      return false;\n    }\n    lI++;\n  }\n  return true;\n}\n\nfunction _isWildCard(tag: string): boolean {\n  return tag === '*';\n}\n\nfunction _matchLangTag(left: string, right: string): boolean {\n  const matchInitial = new RegExp(`/${left}/`, 'iu');\n  return matchInitial.test(`/${right}/`);\n}\n\n/**\n * Formats a timezone string into a XML DayTimeDuration\n *\n * TODO: Test\n * Used in fn:timezone\n * http://www.datypic.com/sc/xsd/t-xsd_dayTimeDuration.html\n */\nexport function formatDayTimeDuration(timezone: string): string | undefined {\n  if (!timezone) {\n    return;\n  }\n  if (timezone.startsWith('Z')) {\n    return 'PT0S';\n  }\n  // Split string\n  const [ sign, h1Raw, h2Raw, _, m1Raw, m2Raw ] = timezone;\n\n  // Cut of leading zero, set to empty string if 0, and append H;\n  const h1 = h1Raw !== '0' ? h1Raw : '';\n  const h2 = h1 || h2Raw !== '0' ? h2Raw : '';\n  const hours = h1 + h2 ? `${h1 + h2}H` : '';\n\n  // Same as in hours\n  const m1 = m1Raw !== '0' ? m1Raw : '';\n  const m2 = m1 || m2Raw !== '0' ? m2Raw : '';\n  const minutes = m1 + m2 ? `${m1 + m2}M` : '';\n\n  // Concat sign and time and mandatory separators\n  const time = `${hours}${minutes}`;\n  const signNoPlus = sign === '-' ? '-' : '';\n  return `${signNoPlus}PT${time}`;\n}\n"]}