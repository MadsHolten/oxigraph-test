"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncAggregateEvaluator = void 0;
const AsyncEvaluator_1 = require("./AsyncEvaluator");
const BaseAggregateEvaluator_1 = require("./evaluatorHelpers/BaseAggregateEvaluator");
class AsyncAggregateEvaluator extends BaseAggregateEvaluator_1.BaseAggregateEvaluator {
    constructor(expr, context, throwError) {
        super(expr, AsyncEvaluator_1.AsyncEvaluator.completeContext(context || {}), throwError);
        this.evaluator = new AsyncEvaluator_1.AsyncEvaluator(expr.expression, context);
        this.errorOccurred = false;
    }
    put(bindings) {
        return this.init(bindings);
    }
    async __put(bindings) {
        try {
            const term = await this.evaluator.evaluate(bindings);
            this.state = this.aggregator.put(this.state, term);
        }
        catch (error) {
            this.safeThrow(error);
        }
    }
    safeThrow(err) {
        if (this.throwError) {
            throw err;
        }
        else {
            // eslint-disable-next-line @typescript-eslint/no-empty-function
            this.put = async () => { };
            // eslint-disable-next-line unicorn/no-useless-undefined
            this.result = () => undefined;
            this.errorOccurred = true;
        }
    }
    async init(start) {
        try {
            const startTerm = await this.evaluator.evaluate(start);
            if (!startTerm || this.errorOccurred) {
                return;
            }
            if (this.state) {
                // Another put already initialized this, we should just handle the put as in __put and not init anymore
                this.state = this.aggregator.put(this.state, startTerm);
                return;
            }
            this.state = this.aggregator.init(startTerm);
            if (this.state) {
                this.put = this.__put.bind(this);
                this.result = this.__result.bind(this);
            }
        }
        catch (error) {
            this.safeThrow(error);
        }
    }
}
exports.AsyncAggregateEvaluator = AsyncAggregateEvaluator;
//# sourceMappingURL=AsyncAggregateEvaluator.js.map