/**
 * A proxy handler for exposing array-valued hashes
 * as hashes with singular values.
 * This proxy will always take the first element of array values.
 */
export declare class SingularPropertyHandler<T> implements ProxyHandler<Record<string, T[]>> {
    has(target: Record<string, T[]>, propertyKey: string | symbol): boolean;
    get(target: Record<string, T[]>, propertyKey: string | symbol): T | undefined;
    set(target: Record<string, T[]>, propertyKey: string | symbol, value: any): boolean;
    ownKeys(target: Record<string, T[]>): (string | symbol)[];
    deleteProperty(target: Record<string, T[]>, propertyKey: string | symbol): boolean;
}
